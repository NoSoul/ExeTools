#include <stdio.h>
#include <stdlib.h>
typedef struct {
    float m_FDLLow;
    float m_NoffsDL;
    float m_NDLA;
    float m_NDLB;
    float m_FULLow;
    float m_NoffsUL;
    float m_NULA;
    float m_NULB;
} E_UTEA;
E_UTEA g_List[] = {
    2110, 0, 0, 599, 1920, 18000, 18000, 18599,
    1930, 600, 600, 1199, 1850, 18600, 18600, 19199,
    1805, 1200, 1200, 1949, 1710, 19200, 19200, 19949,
    2110, 1950, 1950, 2399, 1710, 19950, 19950, 20399,
    869, 2400, 2400, 2649, 824, 20400, 20400, 20649,
    875, 2650, 2650, 2749, 830, 20650, 20650, 20749,
    2620, 2750, 2750, 3449, 2500, 20750, 20750, 21449,
    925, 3450, 3450, 3799, 880, 21450, 21450, 21799,
    1844.9, 3800, 3800, 4149, 1749.9, 21800, 21800, 22149,
    2110, 4150, 4150, 4749, 1710, 22150, 22150, 22749,
    1475.9, 4750, 4750, 4949, 1427.9, 22750, 22750, 22949,
    729, 5010, 5010, 5179, 699, 23010, 23010, 23179,
    746, 5180, 5180, 5279, 777, 23180, 23180, 23279,
    758, 5280, 5280, 5379, 788, 23280, 23280, 23379,
    734, 5730, 5730, 5849, 704, 23730, 23730, 23849,
    860, 5850, 5850, 5999, 815, 23850, 23850, 23999,
    875, 6000, 6000, 6149, 830, 24000, 24000, 24149,
    791, 6150, 6150, 6449, 832, 24150, 24150, 24449,
    1495.9, 6450, 6450, 6599, 1447.9, 24450, 24450, 24599,
    1900, 36000, 36000, 36199, 1900, 36000, 36000, 36199,
    2010, 36200, 36200, 36349, 2010, 36200, 36200, 36349,
    1850, 36350, 36350, 36949, 1850, 36350, 36350, 36949,
    1930, 36950, 36950, 37549, 1930, 36950, 36950, 37549,
    1910, 37550, 37550, 37749, 1910, 37550, 37550, 37749,
    2570, 37750, 37750, 38249, 2570, 37750, 37750, 38249,
    1880, 38250, 38250, 38649, 1880, 38250, 38250, 38649,
    2300, 38650, 38650, 39649, 2300, 38650, 38650, 39649,
};

int main(int argc, char *argv[])
{
    if(argc != 2) {
        printf("Usage: %s earfcn\n", argv[0]);
        return 1;
    }
    int earfcn = atoi(argv[1]);
    for(unsigned i = 0; i < sizeof(g_List) / sizeof(E_UTEA); ++i) {
        float offset;
        bool find = false;
        if(earfcn >= g_List[i].m_NDLA && earfcn <= g_List[i].m_NDLB) {
            find = true;
            offset = earfcn - g_List[i].m_NDLA;
        } else if(earfcn >= g_List[i].m_NULA && earfcn <= g_List[i].m_NULB) {
            find = true;
            offset = earfcn - g_List[i].m_NULA;
        }
        if(find) {
            printf("DL: %.1f MHz\tUL: %.1f MHz\n", g_List[i].m_FDLLow + 0.1 * offset, g_List[i].m_FULLow + 0.1 * offset);
            break;
        }
    }
    return 0;
}
